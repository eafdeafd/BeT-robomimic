
============= Initialized Observation Utils with Obs Spec =============

using obs modality: low_dim with keys: ['robot0_gripper_qpos', 'robot0_eef_quat', 'robot0_eef_pos', 'object']
using obs modality: rgb with keys: []
using obs modality: depth with keys: []
using obs modality: scan with keys: []
/home/andrew/Desktop/robo_sims/robomimic

============= Loaded Environment Metadata =============
obs key object with shape (14,)
obs key robot0_eef_pos with shape (3,)
obs key robot0_eef_quat with shape (4,)
obs key robot0_gripper_qpos with shape (2,)
Created environment with name PickPlaceCan
Action size is 7
PickPlaceCan
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}


============= Model Summary =============
ObservationKeyToModalityDict: action not found, adding action to mapping with assumed low_dim modality!
BET (
  ModuleDict(
    (encoder): ObservationBETGroupEncoder(
        group=obs
        ObservationEncoder(
            Key(
                name=object
                shape=[14]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_pos
                shape=[3]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_quat
                shape=[4]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_gripper_qpos
                shape=[2]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            output_shape=[23]
        )
    )
    (ac_encoder): ObservationGroupEncoder(
        group=obs
        ObservationEncoder(
            Key(
                name=object
                shape=[14]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_pos
                shape=[3]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_quat
                shape=[4]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_gripper_qpos
                shape=[2]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            output_shape=[23]
        )
    )
    (mlp): MLP(
        input_dim=23
        output_dim=400
        layer_dims=(300,)
        layer_func=Linear
        dropout=None
        act=Mish
        output_act=Mish
    )
    (decoder): ObservationDecoder(
        Key(
            name=action
            shape=(7,)
            modality=low_dim
            net=(Linear(in_features=400, out_features=7, bias=True))
        )
    )
    (policy): MinGPT(
      (model): GPT(
        (tok_emb): Linear(in_features=23, out_features=72, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (blocks): Sequential(
          (0): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (1): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (2): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (3): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (ln_f): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
        (head): Linear(in_features=72, out_features=256, bias=False)
      )
    )
  )
)

SequenceDataset: loading dataset into memory...
  0%|          | 0/180 [00:00<?, ?it/s] 45%|####5     | 81/180 [00:00<00:00, 801.16it/s] 90%|######### | 162/180 [00:00<00:00, 793.44it/s]100%|##########| 180/180 [00:00<00:00, 794.69it/s]
SequenceDataset: caching get_item calls...
  0%|          | 0/20883 [00:00<?, ?it/s]  7%|6         | 1383/20883 [00:00<00:01, 13828.30it/s] 13%|#3        | 2770/20883 [00:00<00:01, 13847.28it/s] 20%|#9        | 4155/20883 [00:00<00:01, 13827.80it/s] 27%|##6       | 5573/20883 [00:00<00:01, 13962.89it/s] 33%|###3      | 6970/20883 [00:00<00:01, 13804.16it/s] 40%|###9      | 8351/20883 [00:00<00:00, 13741.63it/s] 47%|####6     | 9726/20883 [00:00<00:00, 13681.07it/s] 53%|#####3    | 11119/20883 [00:00<00:00, 13758.33it/s] 60%|#####9    | 12509/20883 [00:00<00:00, 13800.71it/s]Traceback (most recent call last):
  File "robomimic/scripts/train.py", line 413, in <module>
    main(args)
  File "robomimic/scripts/train.py", line 364, in main
    train(config, device=device)
  File "robomimic/scripts/train.py", line 132, in train
    trainset, validset = TrainUtils.load_data_for_training(
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/train_utils.py", line 106, in load_data_for_training
    train_dataset = dataset_factory(config, obs_keys, filter_by_attribute=train_filter_by_attribute)
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/train_utils.py", line 153, in dataset_factory
    dataset = SequenceDataset(**ds_kwargs)
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/dataset.py", line 146, in __init__
    self.getitem_cache = [self.get_item(i) for i in LogUtils.custom_tqdm(range(len(self)))]
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/dataset.py", line 146, in <listcomp>
    self.getitem_cache = [self.get_item(i) for i in LogUtils.custom_tqdm(range(len(self)))]
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/dataset.py", line 424, in get_item
    meta = self.get_dataset_sequence_from_demo(
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/dataset.py", line 562, in get_dataset_sequence_from_demo
    data, pad_mask = self.get_sequence_from_demo(
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/dataset.py", line 516, in get_sequence_from_demo
    pad_mask = pad_mask[:, None].astype(np.bool)
  File "/home/andrew/anaconda3/envs/behavior-transformer/lib/python3.8/site-packages/numpy/__init__.py", line 277, in __getattr__
    try:
KeyboardInterrupt
 60%|######    | 12625/20883 [00:00<00:00, 12763.69it/s]
