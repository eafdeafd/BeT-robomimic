
============= Initialized Observation Utils with Obs Spec =============

using obs modality: low_dim with keys: ['object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos']
using obs modality: rgb with keys: []
using obs modality: depth with keys: []
using obs modality: scan with keys: []
/home/andrew/Desktop/robo_sims/robomimic

============= Loaded Environment Metadata =============
obs key object with shape (10,)
obs key robot0_eef_pos with shape (3,)
obs key robot0_eef_quat with shape (4,)
obs key robot0_gripper_qpos with shape (2,)
Created environment with name Lift
Action size is 7
Lift
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}


============= Model Summary =============
ObservationKeyToModalityDict: action not found, adding action to mapping with assumed low_dim modality!
BET (
  ModuleDict(
    (encoder): ObservationBETGroupEncoder(
        group=obs
        ObservationEncoder(
            Key(
                name=object
                shape=[10]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_pos
                shape=[3]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_quat
                shape=[4]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_gripper_qpos
                shape=[2]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            output_shape=[19]
        )
    )
    (ac_encoder): ObservationGroupEncoder(
        group=obs
        ObservationEncoder(
            Key(
                name=object
                shape=[10]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_pos
                shape=[3]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_eef_quat
                shape=[4]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            Key(
                name=robot0_gripper_qpos
                shape=[2]
                modality=low_dim
                randomizer=None
                net=None
                sharing_from=None
            )
            output_shape=[19]
        )
    )
    (mlp): MLP(
        input_dim=19
        output_dim=400
        layer_dims=(300,)
        layer_func=Linear
        dropout=None
        act=Mish
        output_act=Mish
    )
    (decoder): ObservationDecoder(
        Key(
            name=action
            shape=(7,)
            modality=low_dim
            net=(Linear(in_features=400, out_features=7, bias=True))
        )
    )
    (policy): MinGPT(
      (model): GPT(
        (tok_emb): Linear(in_features=19, out_features=72, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (blocks): Sequential(
          (0): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (1): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (2): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (3): Block(
            (ln1): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=72, out_features=72, bias=True)
              (query): Linear(in_features=72, out_features=72, bias=True)
              (value): Linear(in_features=72, out_features=72, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=72, out_features=72, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=72, out_features=288, bias=True)
              (1): GELU()
              (2): Linear(in_features=288, out_features=72, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (ln_f): LayerNorm((72,), eps=1e-05, elementwise_affine=True)
        (head): Linear(in_features=72, out_features=256, bias=False)
      )
    )
  )
)

SequenceDataset: loading dataset into memory...
  0%|          | 0/180 [00:00<?, ?it/s] 44%|####4     | 80/180 [00:00<00:00, 799.91it/s] 89%|########8 | 160/180 [00:00<00:00, 785.64it/s]100%|##########| 180/180 [00:00<00:00, 788.40it/s]
SequenceDataset: caching get_item calls...
  0%|          | 0/8640 [00:00<?, ?it/s] 15%|#4        | 1255/8640 [00:00<00:00, 12544.33it/s] 29%|##9       | 2510/8640 [00:00<00:00, 11693.35it/s] 43%|####3     | 3719/8640 [00:00<00:00, 11864.70it/s] 57%|#####6    | 4917/8640 [00:00<00:00, 11906.48it/s] 71%|#######   | 6110/8640 [00:00<00:00, 11738.24it/s] 84%|########4 | 7286/8640 [00:00<00:00, 11719.75it/s] 98%|#########8| 8492/8640 [00:00<00:00, 11827.72it/s]100%|##########| 8640/8640 [00:00<00:00, 11835.77it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/20 [00:00<?, ?it/s]100%|##########| 20/20 [00:00<00:00, 766.33it/s]
SequenceDataset: caching get_item calls...
  0%|          | 0/1026 [00:00<?, ?it/s]100%|##########| 1026/1026 [00:00<00:00, 11785.11it/s]

============= Training Dataset =============
SequenceDataset (
	path=datasets/lift/ph/low_dim.hdf5
	obs_keys=('object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos')
	seq_length=5
	filter_key=train
	frame_stack=1
	pad_seq_length=True
	pad_frame_stack=True
	goal_mode=none
	cache_mode=all
	num_demos=180
	num_sequences=8640
)

  0%|          | 0/50 [00:00<?, ?it/s]K-means clustering:   0%|          | 0/50 [00:00<?, ?it/s]K-means clustering:  10%|#         | 5/50 [00:00<00:01, 41.15it/s]K-means clustering:  20%|##        | 10/50 [00:00<00:00, 40.86it/s]K-means clustering:  30%|###       | 15/50 [00:00<00:00, 37.92it/s]K-means clustering:  40%|####      | 20/50 [00:00<00:00, 39.57it/s]K-means clustering:  50%|#####     | 25/50 [00:00<00:00, 40.75it/s]K-means clustering:  60%|######    | 30/50 [00:00<00:00, 41.59it/s]K-means clustering:  70%|#######   | 35/50 [00:00<00:00, 41.97it/s]K-means clustering:  80%|########  | 40/50 [00:00<00:00, 42.87it/s]K-means clustering:  90%|######### | 45/50 [00:01<00:00, 43.04it/s]K-means clustering: 100%|##########| 50/50 [00:01<00:00, 43.26it/s]K-means clustering: 100%|##########| 50/50 [00:01<00:00, 41.84it/s]
  0%|          | 0/100 [00:00<?, ?it/s]  1%|1         | 1/100 [00:00<00:22,  4.47it/s]  7%|7         | 7/100 [00:00<00:03, 26.01it/s] 14%|#4        | 14/100 [00:00<00:02, 39.68it/s] 21%|##1       | 21/100 [00:00<00:01, 48.43it/s] 28%|##8       | 28/100 [00:00<00:01, 52.86it/s] 35%|###5      | 35/100 [00:00<00:01, 56.76it/s] 42%|####2     | 42/100 [00:00<00:00, 58.21it/s] 49%|####9     | 49/100 [00:00<00:00, 58.92it/s] 56%|#####6    | 56/100 [00:01<00:00, 59.39it/s] 63%|######3   | 63/100 [00:01<00:00, 59.78it/s] 70%|#######   | 70/100 [00:01<00:00, 58.89it/s] 76%|#######6  | 76/100 [00:01<00:00, 58.35it/s] 82%|########2 | 82/100 [00:01<00:00, 57.55it/s] 88%|########8 | 88/100 [00:01<00:00, 56.17it/s] 94%|#########3| 94/100 [00:01<00:00, 56.32it/s]100%|##########| 100/100 [00:01<00:00, 56.93it/s]100%|##########| 100/100 [00:01<00:00, 52.99it/s]
Train Epoch 1
{
    "Loss": 71.29583770751952,
    "Policy_Grad_Norms": 1.0000000099431703,
    "Time_Data_Loading": 0.003633928298950195,
    "Time_Epoch": 0.03146117925643921,
    "Time_Log_Info": 9.412765502929688e-05,
    "Time_Process_Batch": 0.0005354563395182292,
    "Time_Train_Batch": 0.027114856243133544
}
  0%|          | 0/10 [00:00<?, ?it/s]100%|##########| 10/10 [00:00<00:00, 194.04it/s]
Validation Epoch 1
{
    "Loss": 41.5310474395752,
    "Time_Data_Loading": 0.00033440987269083656,
    "Time_Epoch": 0.000875238577524821,
    "Time_Log_Info": 5.539258321126302e-06,
    "Time_Process_Batch": 6.000200907389323e-05,
    "Time_Train_Batch": 0.000457457701365153
}

Epoch 1 Memory Usage: 3659 MB

finished run successfully!
