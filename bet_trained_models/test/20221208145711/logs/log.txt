
============= Initialized Observation Utils with Obs Spec =============

using obs modality: low_dim with keys: ['robot0_eef_quat', 'robot0_eef_pos', 'robot0_gripper_qpos', 'object']
using obs modality: rgb with keys: []
using obs modality: depth with keys: []
using obs modality: scan with keys: []
/home/andrew/Desktop/robo_sims/robomimic

============= Loaded Environment Metadata =============
obs key object with shape (14,)
obs key robot0_eef_pos with shape (3,)
obs key robot0_eef_quat with shape (4,)
obs key robot0_gripper_qpos with shape (2,)
Created environment with name NutAssemblySquare
Action size is 7
NutAssemblySquare
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}
Created environment with name PickPlaceCan
Action size is 7
PickPlaceCan
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}
Created environment with name Lift
Action size is 7
Lift
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}


============= Model Summary =============
BET (
  ModuleDict(
    (mlp): MLP(
        input_dim=7
        output_dim=7
        layer_dims=[512, 512]
        layer_func=Linear
        dropout=None
        act=Mish
        output_act=Tanh
    )
    (policy): MinGPT(
      (model): GPT(
        (tok_emb): Linear(in_features=26, out_features=120, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (blocks): Sequential(
          (0): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (1): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (2): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (3): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (4): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
          (5): Block(
            (ln1): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (ln2): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
            (attn): CausalSelfAttention(
              (key): Linear(in_features=120, out_features=120, bias=True)
              (query): Linear(in_features=120, out_features=120, bias=True)
              (value): Linear(in_features=120, out_features=120, bias=True)
              (attn_drop): Dropout(p=0.1, inplace=False)
              (resid_drop): Dropout(p=0.1, inplace=False)
              (proj): Linear(in_features=120, out_features=120, bias=True)
            )
            (mlp): Sequential(
              (0): Linear(in_features=120, out_features=480, bias=True)
              (1): GELU()
              (2): Linear(in_features=480, out_features=120, bias=True)
              (3): Dropout(p=0.1, inplace=False)
            )
          )
        )
        (ln_f): LayerNorm((120,), eps=1e-05, elementwise_affine=True)
        (head): Linear(in_features=120, out_features=512, bias=False)
      )
    )
  )
)

SequenceDataset: loading dataset into memory...
  0%|          | 0/180 [00:00<?, ?it/s] 49%|####8     | 88/180 [00:00<00:00, 879.63it/s] 98%|#########7| 176/180 [00:00<00:00, 867.17it/s]100%|##########| 180/180 [00:00<00:00, 864.71it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/20 [00:00<?, ?it/s]100%|##########| 20/20 [00:00<00:00, 859.22it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/180 [00:00<?, ?it/s] 48%|####8     | 87/180 [00:00<00:00, 864.02it/s] 97%|#########6| 174/180 [00:00<00:00, 862.14it/s]100%|##########| 180/180 [00:00<00:00, 862.21it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/20 [00:00<?, ?it/s]100%|##########| 20/20 [00:00<00:00, 855.55it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/180 [00:00<?, ?it/s] 49%|####8     | 88/180 [00:00<00:00, 872.98it/s] 98%|#########7| 176/180 [00:00<00:00, 874.61it/s]100%|##########| 180/180 [00:00<00:00, 872.10it/s]
SequenceDataset: loading dataset into memory...
  0%|          | 0/20 [00:00<?, ?it/s]100%|##########| 20/20 [00:00<00:00, 840.13it/s]

============= Training Dataset =============
[SequenceDataset (
	path=datasets/square/ph/low_dim.hdf5
	obs_keys=('object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos')
	seq_length=10
	filter_key=train
	frame_stack=1
	pad_seq_length=True
	pad_frame_stack=True
	goal_mode=none
	cache_mode=low_dim
	num_demos=180
	num_sequences=27165
), SequenceDataset (
	path=/home/andrew/Desktop/robo_sims/robomimic/datasets/can/ph/low_dim.hdf5
	obs_keys=('object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos')
	seq_length=10
	filter_key=train
	frame_stack=1
	pad_seq_length=True
	pad_frame_stack=True
	goal_mode=none
	cache_mode=low_dim
	num_demos=180
	num_sequences=20883
), SequenceDataset (
	path=/home/andrew/Desktop/robo_sims/robomimic/datasets/lift/ph/low_dim.hdf5
	obs_keys=('object', 'robot0_eef_pos', 'robot0_eef_quat', 'robot0_gripper_qpos')
	seq_length=10
	filter_key=train
	frame_stack=1
	pad_seq_length=True
	pad_frame_stack=True
	goal_mode=none
	cache_mode=low_dim
	num_demos=180
	num_sequences=8640
)]

  0%|          | 0/100 [00:00<?, ?it/s]K-means clustering:   0%|          | 0/100 [00:00<?, ?it/s]K-means clustering:   3%|3         | 3/100 [00:00<00:03, 26.11it/s]K-means clustering:   6%|6         | 6/100 [00:00<00:03, 26.15it/s]K-means clustering:   9%|9         | 9/100 [00:00<00:03, 26.18it/s]K-means clustering:  12%|#2        | 12/100 [00:00<00:03, 25.95it/s]K-means clustering:  15%|#5        | 15/100 [00:00<00:03, 24.87it/s]K-means clustering:  18%|#8        | 18/100 [00:00<00:03, 23.05it/s]K-means clustering:  21%|##1       | 21/100 [00:00<00:03, 22.26it/s]K-means clustering:  24%|##4       | 24/100 [00:01<00:03, 21.80it/s]K-means clustering:  27%|##7       | 27/100 [00:01<00:03, 21.75it/s]K-means clustering:  30%|###       | 30/100 [00:01<00:03, 22.35it/s]K-means clustering:  33%|###3      | 33/100 [00:01<00:02, 22.94it/s]K-means clustering:  36%|###6      | 36/100 [00:01<00:02, 23.42it/s]K-means clustering:  39%|###9      | 39/100 [00:01<00:02, 23.62it/s]K-means clustering:  42%|####2     | 42/100 [00:01<00:02, 23.85it/s]K-means clustering:  45%|####5     | 45/100 [00:01<00:02, 24.37it/s]K-means clustering:  48%|####8     | 48/100 [00:02<00:02, 24.75it/s]K-means clustering:  51%|#####1    | 51/100 [00:02<00:01, 25.10it/s]K-means clustering:  54%|#####4    | 54/100 [00:02<00:01, 25.40it/s]K-means clustering:  57%|#####6    | 57/100 [00:02<00:01, 25.60it/s]K-means clustering:  60%|######    | 60/100 [00:02<00:01, 25.63it/s]K-means clustering:  63%|######3   | 63/100 [00:02<00:01, 25.68it/s]K-means clustering:  66%|######6   | 66/100 [00:02<00:01, 25.15it/s]K-means clustering:  69%|######9   | 69/100 [00:02<00:01, 25.38it/s]K-means clustering:  72%|#######2  | 72/100 [00:02<00:01, 25.49it/s]K-means clustering:  75%|#######5  | 75/100 [00:03<00:00, 25.55it/s]K-means clustering:  78%|#######8  | 78/100 [00:03<00:00, 25.63it/s]K-means clustering:  81%|########1 | 81/100 [00:03<00:00, 25.54it/s]K-means clustering:  84%|########4 | 84/100 [00:03<00:00, 25.62it/s]K-means clustering:  87%|########7 | 87/100 [00:03<00:00, 25.68it/s]K-means clustering:  90%|######### | 90/100 [00:03<00:00, 25.58it/s]K-means clustering:  93%|#########3| 93/100 [00:03<00:00, 25.61it/s]K-means clustering:  96%|#########6| 96/100 [00:03<00:00, 25.72it/s]K-means clustering:  99%|#########9| 99/100 [00:04<00:00, 25.81it/s]K-means clustering: 100%|##########| 100/100 [00:04<00:00, 24.74it/s]
  0%|          | 0/100 [00:00<?, ?it/s]  1%|1         | 1/100 [00:00<00:18,  5.49it/s]  7%|7         | 7/100 [00:00<00:03, 27.87it/s] 13%|#3        | 13/100 [00:00<00:02, 38.17it/s] 19%|#9        | 19/100 [00:00<00:01, 43.71it/s] 25%|##5       | 25/100 [00:00<00:01, 47.05it/s] 31%|###1      | 31/100 [00:00<00:01, 49.28it/s] 37%|###7      | 37/100 [00:00<00:01, 50.63it/s] 43%|####3     | 43/100 [00:00<00:01, 51.35it/s] 49%|####9     | 49/100 [00:01<00:00, 51.93it/s] 55%|#####5    | 55/100 [00:01<00:00, 51.34it/s] 61%|######1   | 61/100 [00:01<00:00, 51.03it/s] 67%|######7   | 67/100 [00:01<00:00, 51.62it/s] 73%|#######3  | 73/100 [00:01<00:00, 51.71it/s] 79%|#######9  | 79/100 [00:01<00:00, 52.45it/s] 85%|########5 | 85/100 [00:01<00:00, 53.29it/s] 91%|#########1| 91/100 [00:01<00:00, 53.28it/s] 97%|#########7| 97/100 [00:01<00:00, 53.08it/s]100%|##########| 100/100 [00:02<00:00, 48.75it/s]
  0%|          | 0/100 [00:00<?, ?it/s]  6%|6         | 6/100 [00:00<00:01, 53.33it/s] 12%|#2        | 12/100 [00:00<00:01, 53.72it/s] 18%|#8        | 18/100 [00:00<00:01, 53.60it/s] 24%|##4       | 24/100 [00:00<00:01, 53.51it/s] 30%|###       | 30/100 [00:00<00:01, 53.40it/s] 36%|###6      | 36/100 [00:00<00:01, 53.14it/s] 42%|####2     | 42/100 [00:00<00:01, 53.48it/s] 48%|####8     | 48/100 [00:00<00:00, 53.37it/s] 54%|#####4    | 54/100 [00:01<00:00, 53.33it/s] 60%|######    | 60/100 [00:01<00:00, 52.37it/s] 66%|######6   | 66/100 [00:01<00:00, 52.98it/s] 72%|#######2  | 72/100 [00:01<00:00, 53.17it/s] 78%|#######8  | 78/100 [00:01<00:00, 53.56it/s] 84%|########4 | 84/100 [00:01<00:00, 53.53it/s] 90%|######### | 90/100 [00:01<00:00, 53.34it/s] 96%|#########6| 96/100 [00:01<00:00, 53.47it/s]100%|##########| 100/100 [00:01<00:00, 53.34it/s]
  0%|          | 0/100 [00:00<?, ?it/s]  6%|6         | 6/100 [00:00<00:01, 52.75it/s] 12%|#2        | 12/100 [00:00<00:01, 53.06it/s] 18%|#8        | 18/100 [00:00<00:01, 53.13it/s] 24%|##4       | 24/100 [00:00<00:01, 53.16it/s] 30%|###       | 30/100 [00:00<00:01, 53.24it/s] 36%|###6      | 36/100 [00:00<00:01, 52.92it/s] 42%|####2     | 42/100 [00:00<00:01, 53.12it/s] 48%|####8     | 48/100 [00:00<00:00, 53.46it/s] 54%|#####4    | 54/100 [00:01<00:00, 53.65it/s] 60%|######    | 60/100 [00:01<00:00, 53.68it/s] 66%|######6   | 66/100 [00:01<00:00, 53.53it/s] 72%|#######2  | 72/100 [00:01<00:00, 53.60it/s] 78%|#######8  | 78/100 [00:01<00:00, 52.75it/s] 84%|########4 | 84/100 [00:01<00:00, 51.46it/s] 90%|######### | 90/100 [00:01<00:00, 51.85it/s] 96%|#########6| 96/100 [00:01<00:00, 51.35it/s]100%|##########| 100/100 [00:01<00:00, 52.66it/s]
Train Epoch 1
{
    "Cosine_Loss": 0.6393036643664042,
    "L1_Loss": 0.09860896805301309,
    "L2_Loss": 0.20218651389082273,
    "Loss": 4.040816536744436,
    "Policy_Grad_Norms": 0.9999996216838993,
    "Time_Data_Loading": 0.01494127909342448,
    "Time_Epoch": 0.09710851907730103,
    "Time_Log_Info": 0.00021789073944091796,
    "Time_Process_Batch": 0.0011628389358520508,
    "Time_Train_Batch": 0.08059513966242472
}
  0%|          | 0/20 [00:00<?, ?it/s] 85%|########5 | 17/20 [00:00<00:00, 164.50it/s]100%|##########| 20/20 [00:00<00:00, 164.41it/s]
  0%|          | 0/20 [00:00<?, ?it/s] 85%|########5 | 17/20 [00:00<00:00, 166.38it/s]100%|##########| 20/20 [00:00<00:00, 165.63it/s]
  0%|          | 0/20 [00:00<?, ?it/s] 85%|########5 | 17/20 [00:00<00:00, 164.55it/s]100%|##########| 20/20 [00:00<00:00, 164.47it/s]
Validation Epoch 1
{
    "Cosine_Loss": 0.751221752166748,
    "L1_Loss": 0.10060184293737014,
    "L2_Loss": 0.22511862789591153,
    "Loss": 4.297973370552063,
    "Time_Data_Loading": 0.0028504848480224608,
    "Time_Epoch": 0.006089413166046142,
    "Time_Log_Info": 3.744363784790039e-05,
    "Time_Process_Batch": 0.0002075632413228353,
    "Time_Train_Batch": 0.002960666020711263
}
video writes to /home/andrew/Desktop/robo_sims/robomimic/robomimic/../bet_trained_models/test/20221208145711/videos/NutAssemblySquare_epoch_1.mp4
rollout: env=NutAssemblySquare, horizon=300, use_goals=False, num_episodes=20
  0%|          | 0/20 [00:00<?, ?it/s]name NutAssemblySquare env NutAssemblySquare
{
    "camera_depths": false,
    "camera_heights": 84,
    "camera_widths": 84,
    "control_freq": 20,
    "controller_configs": {
        "control_delta": true,
        "damping": 1,
        "damping_limits": [
            0,
            10
        ],
        "impedance_mode": "fixed",
        "input_max": 1,
        "input_min": -1,
        "interpolation": null,
        "kp": 150,
        "kp_limits": [
            0,
            300
        ],
        "orientation_limits": null,
        "output_max": [
            0.05,
            0.05,
            0.05,
            0.5,
            0.5,
            0.5
        ],
        "output_min": [
            -0.05,
            -0.05,
            -0.05,
            -0.5,
            -0.5,
            -0.5
        ],
        "position_limits": null,
        "ramp_ratio": 0.2,
        "type": "OSC_POSE",
        "uncouple_pos_ori": true
    },
    "has_offscreen_renderer": true,
    "has_renderer": false,
    "ignore_done": true,
    "render_gpu_device_id": 0,
    "reward_shaping": false,
    "robots": [
        "Panda"
    ],
    "use_camera_obs": false,
    "use_object_obs": true
}
  0%|          | 0/20 [00:00<?, ?it/s]
run failed with error:
issubclass() arg 1 must be a class

Traceback (most recent call last):
  File "robomimic/scripts/multitask_train.py", line 376, in main
    train(config, device=device)
  File "robomimic/scripts/multitask_train.py", line 260, in train
    all_rollout_logs, video_paths = TrainUtils.rollout_with_stats(
  File "/home/andrew/Desktop/robo_sims/robomimic/robomimic/utils/train_utils.py", line 344, in rollout_with_stats
    if issubclass(policy, BET):
TypeError: issubclass() arg 1 must be a class

